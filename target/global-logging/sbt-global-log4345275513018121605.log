[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 1.8.0_291)
[debug]       Load.loadUnit: plugins took 133.770713ms
[debug]       Load.loadUnit: defsScala took 0.271819ms
[debug] [Loading] Scanning directory /Users/vikramsingh/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/vikramsingh/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.151055 ms
[debug]           Load.resolveProject(global-plugins) took 39.427239ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/vikramsingh/.sbt/1.0/plugins, plugins: List(<none>))) took 75.497898ms
[debug] [Loading] Done in /Users/vikramsingh/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.025387ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.190178ms
[debug]     Load.loadUnit(file:/Users/vikramsingh/.sbt/1.0/plugins/, ...) took 230.904852ms
[debug]   Load.apply: load took 498.109411ms
[debug]   Load.apply: resolveProjects took 5.29999ms
[debug]   Load.apply: finalTransforms took 42.049267ms
[debug]   Load.apply: config.delegates took 5.735731ms
[debug]   Load.apply: Def.make(settings)... took 272.831338ms
[debug]   Load.apply: structureIndex took 71.595073ms
[debug]   Load.apply: mkStreams took 1.185626ms
[info] loading global plugins from /Users/vikramsingh/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2107.467042ms
[debug]           Load.loadUnit: plugins took 11.255615ms
[debug]           Load.loadUnit: defsScala took 0.003023ms
[debug] [Loading] Scanning directory /Users/vikramsingh/work/petProject/apacheWithPostgrew/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/vikramsingh/work/petProject/apacheWithPostgrew/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.489485 ms
[debug]               Load.resolveProject(apachewithpostgrew-build) took 1.075643ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apachewithpostgrew-build, base: /Users/vikramsingh/work/petProject/apacheWithPostgrew/project, plugins: List(<none>))) took 2.954551ms
[debug] [Loading] Done in /Users/vikramsingh/work/petProject/apacheWithPostgrew/project, returning: (apachewithpostgrew-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4.526757ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007058ms
[debug]         Load.loadUnit(file:/Users/vikramsingh/work/petProject/apacheWithPostgrew/project/, ...) took 16.335475ms
[debug]       Load.apply: load took 17.183343ms
[debug]       Load.apply: resolveProjects took 0.07108ms
[debug]       Load.apply: finalTransforms took 6.457337ms
[debug]       Load.apply: config.delegates took 0.290987ms
[debug]       Load.apply: Def.make(settings)... took 50.547703ms
[debug]       Load.apply: structureIndex took 16.853456ms
[debug]       Load.apply: mkStreams took 0.001928ms
[info] loading project definition from /Users/vikramsingh/work/petProject/apacheWithPostgrew/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 214.522115ms
[debug]     Load.loadUnit: defsScala took 0.002436ms
[debug] [Loading] Scanning directory /Users/vikramsingh/work/petProject/apacheWithPostgrew
[debug]       Load.loadUnit: mkEval took 6.341739ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/vikramsingh/work/petProject/apacheWithPostgrew, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.457771 ms
[info] loading settings for project apachewithpostgrew from build.sbt ...
[debug]         Load.resolveProject(apachewithpostgrew) took 2.251144ms
[debug]       Load.loadTransitive: finalizeProject(Project(id apachewithpostgrew, base: /Users/vikramsingh/work/petProject/apacheWithPostgrew, plugins: List(<none>))) took 4.140499ms
[debug] [Loading] Done in /Users/vikramsingh/work/petProject/apacheWithPostgrew, returning: (apachewithpostgrew)
[debug]     Load.loadUnit: loadedProjectsRaw took 2264.015502ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.290326ms
[debug]   Load.loadUnit(file:/Users/vikramsingh/work/petProject/apacheWithPostgrew/, ...) took 2488.372481ms
[debug] Load.apply: load took 2489.306774ms
[debug] Load.apply: resolveProjects took 0.098289ms
[debug] Load.apply: finalTransforms took 5.563825ms
[debug] Load.apply: config.delegates took 0.235649ms
[debug] Load.apply: Def.make(settings)... took 47.048894ms
[debug] Load.apply: structureIndex took 20.288036ms
[debug] Load.apply: mkStreams took 0.002499ms
[info] set current project to apacheWithPostgrew (in build file:/Users/vikramsingh/work/petProject/apacheWithPostgrew/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/vikramsingh/.sbt/1.0/server/b8788fa51478d75e9c2f/sock
[debug] Writing bsp connection file
[info] started sbt server
